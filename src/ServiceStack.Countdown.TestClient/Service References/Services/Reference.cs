//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceStack.Countdown.TestClient.Services {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="deviationMessageSet", Namespace="http://schemas.moviatrafik.dk/countdown/2014")]
    [System.SerializableAttribute()]
    public partial class deviationMessageSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceStack.Countdown.TestClient.Services.deviationMessageSet.stopPoint[] stopPointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime time {
            get {
                return this.timeField;
            }
            set {
                if ((this.timeField.Equals(value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public ServiceStack.Countdown.TestClient.Services.deviationMessageSet.stopPoint[] stopPoints {
            get {
                return this.stopPointsField;
            }
            set {
                if ((object.ReferenceEquals(this.stopPointsField, value) != true)) {
                    this.stopPointsField = value;
                    this.RaisePropertyChanged("stopPoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="deviationMessageSet.stopPoint", Namespace="http://schemas.moviatrafik.dk/countdown/2014")]
        [System.SerializableAttribute()]
        public partial class stopPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int idField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string nameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private ServiceStack.Countdown.TestClient.Services.deviationMessageSet.stopPoint.deviation[] deviationsField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int id {
                get {
                    return this.idField;
                }
                set {
                    if ((this.idField.Equals(value) != true)) {
                        this.idField = value;
                        this.RaisePropertyChanged("id");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string name {
                get {
                    return this.nameField;
                }
                set {
                    if ((object.ReferenceEquals(this.nameField, value) != true)) {
                        this.nameField = value;
                        this.RaisePropertyChanged("name");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
            public ServiceStack.Countdown.TestClient.Services.deviationMessageSet.stopPoint.deviation[] deviations {
                get {
                    return this.deviationsField;
                }
                set {
                    if ((object.ReferenceEquals(this.deviationsField, value) != true)) {
                        this.deviationsField = value;
                        this.RaisePropertyChanged("deviations");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
            
            [System.Diagnostics.DebuggerStepThroughAttribute()]
            [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
            [System.Runtime.Serialization.DataContractAttribute(Name="deviationMessageSet.stopPoint.deviation", Namespace="http://schemas.moviatrafik.dk/countdown/2014")]
            [System.SerializableAttribute()]
            public partial class deviation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
                
                [System.NonSerializedAttribute()]
                private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private decimal idField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string headerField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string textField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private System.DateTime validFromField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private System.DateTime validToField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private System.DateTime lastModifiedUtcField;
                
                public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                    get {
                        return this.extensionDataField;
                    }
                    set {
                        this.extensionDataField = value;
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public decimal id {
                    get {
                        return this.idField;
                    }
                    set {
                        if ((this.idField.Equals(value) != true)) {
                            this.idField = value;
                            this.RaisePropertyChanged("id");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
                public string header {
                    get {
                        return this.headerField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.headerField, value) != true)) {
                            this.headerField = value;
                            this.RaisePropertyChanged("header");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
                public string text {
                    get {
                        return this.textField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.textField, value) != true)) {
                            this.textField = value;
                            this.RaisePropertyChanged("text");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
                public System.DateTime validFrom {
                    get {
                        return this.validFromField;
                    }
                    set {
                        if ((this.validFromField.Equals(value) != true)) {
                            this.validFromField = value;
                            this.RaisePropertyChanged("validFrom");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
                public System.DateTime validTo {
                    get {
                        return this.validToField;
                    }
                    set {
                        if ((this.validToField.Equals(value) != true)) {
                            this.validToField = value;
                            this.RaisePropertyChanged("validTo");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
                public System.DateTime lastModifiedUtc {
                    get {
                        return this.lastModifiedUtcField;
                    }
                    set {
                        if ((this.lastModifiedUtcField.Equals(value) != true)) {
                            this.lastModifiedUtcField = value;
                            this.RaisePropertyChanged("lastModifiedUtc");
                        }
                    }
                }
                
                public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
                
                protected void RaisePropertyChanged(string propertyName) {
                    System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                    if ((propertyChanged != null)) {
                        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                    }
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="departureTimeSet", Namespace="http://schemas.moviatrafik.dk/countdown/2014")]
    [System.SerializableAttribute()]
    public partial class departureTimeSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceStack.Countdown.TestClient.Services.departureTimeSet.stopPoint[] stopPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceStack.Countdown.TestClient.Services.departureTimeSet.stopPoint[] stopPoints {
            get {
                return this.stopPointsField;
            }
            set {
                if ((object.ReferenceEquals(this.stopPointsField, value) != true)) {
                    this.stopPointsField = value;
                    this.RaisePropertyChanged("stopPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime time {
            get {
                return this.timeField;
            }
            set {
                if ((this.timeField.Equals(value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="departureTimeSet.stopPoint", Namespace="http://schemas.moviatrafik.dk/countdown/2014")]
        [System.SerializableAttribute()]
        public partial class stopPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int idField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private ServiceStack.Countdown.TestClient.Services.departureTimeSet.stopPoint.lineDestination[] lineDestinationsField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string nameField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int id {
                get {
                    return this.idField;
                }
                set {
                    if ((this.idField.Equals(value) != true)) {
                        this.idField = value;
                        this.RaisePropertyChanged("id");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public ServiceStack.Countdown.TestClient.Services.departureTimeSet.stopPoint.lineDestination[] lineDestinations {
                get {
                    return this.lineDestinationsField;
                }
                set {
                    if ((object.ReferenceEquals(this.lineDestinationsField, value) != true)) {
                        this.lineDestinationsField = value;
                        this.RaisePropertyChanged("lineDestinations");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string name {
                get {
                    return this.nameField;
                }
                set {
                    if ((object.ReferenceEquals(this.nameField, value) != true)) {
                        this.nameField = value;
                        this.RaisePropertyChanged("name");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
            
            [System.Diagnostics.DebuggerStepThroughAttribute()]
            [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
            [System.Runtime.Serialization.DataContractAttribute(Name="departureTimeSet.stopPoint.lineDestination", Namespace="http://schemas.moviatrafik.dk/countdown/2014")]
            [System.SerializableAttribute()]
            public partial class lineDestination : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
                
                [System.NonSerializedAttribute()]
                private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private ServiceStack.Countdown.TestClient.Services.departureTimeSet.stopPoint.lineDestination.departureTime[] departuresField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string designationField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string destinationField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string typeField;
                
                public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                    get {
                        return this.extensionDataField;
                    }
                    set {
                        this.extensionDataField = value;
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public ServiceStack.Countdown.TestClient.Services.departureTimeSet.stopPoint.lineDestination.departureTime[] departures {
                    get {
                        return this.departuresField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.departuresField, value) != true)) {
                            this.departuresField = value;
                            this.RaisePropertyChanged("departures");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string designation {
                    get {
                        return this.designationField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.designationField, value) != true)) {
                            this.designationField = value;
                            this.RaisePropertyChanged("designation");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string destination {
                    get {
                        return this.destinationField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.destinationField, value) != true)) {
                            this.destinationField = value;
                            this.RaisePropertyChanged("destination");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string type {
                    get {
                        return this.typeField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.typeField, value) != true)) {
                            this.typeField = value;
                            this.RaisePropertyChanged("type");
                        }
                    }
                }
                
                public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
                
                protected void RaisePropertyChanged(string propertyName) {
                    System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                    if ((propertyChanged != null)) {
                        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                    }
                }
                
                [System.Diagnostics.DebuggerStepThroughAttribute()]
                [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
                [System.Runtime.Serialization.DataContractAttribute(Name="departureTimeSet.stopPoint.lineDestination.departureTime", Namespace="http://schemas.moviatrafik.dk/countdown/2014")]
                [System.SerializableAttribute()]
                public partial class departureTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
                    
                    [System.NonSerializedAttribute()]
                    private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
                    
                    [System.Runtime.Serialization.OptionalFieldAttribute()]
                    private long idField;
                    
                    [System.Runtime.Serialization.OptionalFieldAttribute()]
                    private System.DateTime timeField;
                    
                    [System.Runtime.Serialization.OptionalFieldAttribute()]
                    private bool timeIsRealField;
                    
                    [System.Runtime.Serialization.OptionalFieldAttribute()]
                    private int timeLeftField;
                    
                    public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                        get {
                            return this.extensionDataField;
                        }
                        set {
                            this.extensionDataField = value;
                        }
                    }
                    
                    [System.Runtime.Serialization.DataMemberAttribute()]
                    public long id {
                        get {
                            return this.idField;
                        }
                        set {
                            if ((this.idField.Equals(value) != true)) {
                                this.idField = value;
                                this.RaisePropertyChanged("id");
                            }
                        }
                    }
                    
                    [System.Runtime.Serialization.DataMemberAttribute()]
                    public System.DateTime time {
                        get {
                            return this.timeField;
                        }
                        set {
                            if ((this.timeField.Equals(value) != true)) {
                                this.timeField = value;
                                this.RaisePropertyChanged("time");
                            }
                        }
                    }
                    
                    [System.Runtime.Serialization.DataMemberAttribute()]
                    public bool timeIsReal {
                        get {
                            return this.timeIsRealField;
                        }
                        set {
                            if ((this.timeIsRealField.Equals(value) != true)) {
                                this.timeIsRealField = value;
                                this.RaisePropertyChanged("timeIsReal");
                            }
                        }
                    }
                    
                    [System.Runtime.Serialization.DataMemberAttribute()]
                    public int timeLeft {
                        get {
                            return this.timeLeftField;
                        }
                        set {
                            if ((this.timeLeftField.Equals(value) != true)) {
                                this.timeLeftField = value;
                                this.RaisePropertyChanged("timeLeft");
                            }
                        }
                    }
                    
                    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
                    
                    protected void RaisePropertyChanged(string propertyName) {
                        System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                        if ((propertyChanged != null)) {
                            propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                        }
                    }
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="stopPointSet", Namespace="http://schemas.moviatrafik.dk/countdown/2014")]
    [System.SerializableAttribute()]
    public partial class stopPointSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceStack.Countdown.TestClient.Services.stopPointSet.stopPoint[] stopPointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceStack.Countdown.TestClient.Services.stopPointSet.stopPoint[] stopPoints {
            get {
                return this.stopPointsField;
            }
            set {
                if ((object.ReferenceEquals(this.stopPointsField, value) != true)) {
                    this.stopPointsField = value;
                    this.RaisePropertyChanged("stopPoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="stopPointSet.stopPoint", Namespace="http://schemas.moviatrafik.dk/countdown/2014")]
        [System.SerializableAttribute()]
        public partial class stopPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int idField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string nameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal eastingCoordinateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal northingCoordinateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private ServiceStack.Countdown.TestClient.Services.stopPointSet.stopPoint.lineDirection[] lineDirectionsField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int id {
                get {
                    return this.idField;
                }
                set {
                    if ((this.idField.Equals(value) != true)) {
                        this.idField = value;
                        this.RaisePropertyChanged("id");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string name {
                get {
                    return this.nameField;
                }
                set {
                    if ((object.ReferenceEquals(this.nameField, value) != true)) {
                        this.nameField = value;
                        this.RaisePropertyChanged("name");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
            public decimal eastingCoordinate {
                get {
                    return this.eastingCoordinateField;
                }
                set {
                    if ((this.eastingCoordinateField.Equals(value) != true)) {
                        this.eastingCoordinateField = value;
                        this.RaisePropertyChanged("eastingCoordinate");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
            public decimal northingCoordinate {
                get {
                    return this.northingCoordinateField;
                }
                set {
                    if ((this.northingCoordinateField.Equals(value) != true)) {
                        this.northingCoordinateField = value;
                        this.RaisePropertyChanged("northingCoordinate");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
            public ServiceStack.Countdown.TestClient.Services.stopPointSet.stopPoint.lineDirection[] lineDirections {
                get {
                    return this.lineDirectionsField;
                }
                set {
                    if ((object.ReferenceEquals(this.lineDirectionsField, value) != true)) {
                        this.lineDirectionsField = value;
                        this.RaisePropertyChanged("lineDirections");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
            
            [System.Diagnostics.DebuggerStepThroughAttribute()]
            [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
            [System.Runtime.Serialization.DataContractAttribute(Name="stopPointSet.stopPoint.lineDirection", Namespace="http://schemas.moviatrafik.dk/countdown/2014")]
            [System.SerializableAttribute()]
            public partial class lineDirection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
                
                [System.NonSerializedAttribute()]
                private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private long idField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string nameField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string typeField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string designationField;
                
                public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                    get {
                        return this.extensionDataField;
                    }
                    set {
                        this.extensionDataField = value;
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public long id {
                    get {
                        return this.idField;
                    }
                    set {
                        if ((this.idField.Equals(value) != true)) {
                            this.idField = value;
                            this.RaisePropertyChanged("id");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string name {
                    get {
                        return this.nameField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.nameField, value) != true)) {
                            this.nameField = value;
                            this.RaisePropertyChanged("name");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string type {
                    get {
                        return this.typeField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.typeField, value) != true)) {
                            this.typeField = value;
                            this.RaisePropertyChanged("type");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
                public string designation {
                    get {
                        return this.designationField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.designationField, value) != true)) {
                            this.designationField = value;
                            this.RaisePropertyChanged("designation");
                        }
                    }
                }
                
                public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
                
                protected void RaisePropertyChanged(string propertyName) {
                    System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                    if ((propertyChanged != null)) {
                        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                    }
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="statusReportSet", Namespace="http://schemas.moviatrafik.dk/countdown/2014")]
    [System.SerializableAttribute()]
    public partial class statusReportSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceStack.Countdown.TestClient.Services.statusReportSet.statusReport[] statusReportsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceStack.Countdown.TestClient.Services.statusReportSet.statusReport[] statusReports {
            get {
                return this.statusReportsField;
            }
            set {
                if ((object.ReferenceEquals(this.statusReportsField, value) != true)) {
                    this.statusReportsField = value;
                    this.RaisePropertyChanged("statusReports");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="statusReportSet.statusReport", Namespace="http://schemas.moviatrafik.dk/countdown/2014")]
        [System.SerializableAttribute()]
        public partial class statusReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte batteryLevelField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long deviceIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte displayModeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime lastUpdateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte lightModeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte lightSensorSensitivityField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int stopPointIdField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte batteryLevel {
                get {
                    return this.batteryLevelField;
                }
                set {
                    if ((this.batteryLevelField.Equals(value) != true)) {
                        this.batteryLevelField = value;
                        this.RaisePropertyChanged("batteryLevel");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long deviceId {
                get {
                    return this.deviceIdField;
                }
                set {
                    if ((this.deviceIdField.Equals(value) != true)) {
                        this.deviceIdField = value;
                        this.RaisePropertyChanged("deviceId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte displayMode {
                get {
                    return this.displayModeField;
                }
                set {
                    if ((this.displayModeField.Equals(value) != true)) {
                        this.displayModeField = value;
                        this.RaisePropertyChanged("displayMode");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime lastUpdate {
                get {
                    return this.lastUpdateField;
                }
                set {
                    if ((this.lastUpdateField.Equals(value) != true)) {
                        this.lastUpdateField = value;
                        this.RaisePropertyChanged("lastUpdate");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte lightMode {
                get {
                    return this.lightModeField;
                }
                set {
                    if ((this.lightModeField.Equals(value) != true)) {
                        this.lightModeField = value;
                        this.RaisePropertyChanged("lightMode");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte lightSensorSensitivity {
                get {
                    return this.lightSensorSensitivityField;
                }
                set {
                    if ((this.lightSensorSensitivityField.Equals(value) != true)) {
                        this.lightSensorSensitivityField = value;
                        this.RaisePropertyChanged("lightSensorSensitivity");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int stopPointId {
                get {
                    return this.stopPointIdField;
                }
                set {
                    if ((this.stopPointIdField.Equals(value) != true)) {
                        this.stopPointIdField = value;
                        this.RaisePropertyChanged("stopPointId");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.moviatrafik.dk/countdown/2014", ConfigurationName="Services.ICountdownService")]
    public interface ICountdownService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/Version", ReplyAction="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/VersionResponse")]
        string Version();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/Version", ReplyAction="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/VersionResponse")]
        System.Threading.Tasks.Task<string> VersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/GetDeviationMessag" +
            "eSet", ReplyAction="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/GetDeviationMessag" +
            "eSetResponse")]
        ServiceStack.Countdown.TestClient.Services.deviationMessageSet GetDeviationMessageSet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/GetDeviationMessag" +
            "eSet", ReplyAction="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/GetDeviationMessag" +
            "eSetResponse")]
        System.Threading.Tasks.Task<ServiceStack.Countdown.TestClient.Services.deviationMessageSet> GetDeviationMessageSetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/GetDepartureTimeSe" +
            "t", ReplyAction="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/GetDepartureTimeSe" +
            "tResponse")]
        ServiceStack.Countdown.TestClient.Services.departureTimeSet GetDepartureTimeSet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/GetDepartureTimeSe" +
            "t", ReplyAction="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/GetDepartureTimeSe" +
            "tResponse")]
        System.Threading.Tasks.Task<ServiceStack.Countdown.TestClient.Services.departureTimeSet> GetDepartureTimeSetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/GetStopPointSet", ReplyAction="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/GetStopPointSetRes" +
            "ponse")]
        ServiceStack.Countdown.TestClient.Services.stopPointSet GetStopPointSet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/GetStopPointSet", ReplyAction="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/GetStopPointSetRes" +
            "ponse")]
        System.Threading.Tasks.Task<ServiceStack.Countdown.TestClient.Services.stopPointSet> GetStopPointSetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/PostStatusReportSe" +
            "t", ReplyAction="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/PostStatusReportSe" +
            "tResponse")]
        bool PostStatusReportSet(ServiceStack.Countdown.TestClient.Services.statusReportSet ReportSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/PostStatusReportSe" +
            "t", ReplyAction="http://schemas.moviatrafik.dk/countdown/2014/ICountdownService/PostStatusReportSe" +
            "tResponse")]
        System.Threading.Tasks.Task<bool> PostStatusReportSetAsync(ServiceStack.Countdown.TestClient.Services.statusReportSet ReportSet);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICountdownServiceChannel : ServiceStack.Countdown.TestClient.Services.ICountdownService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CountdownServiceClient : System.ServiceModel.ClientBase<ServiceStack.Countdown.TestClient.Services.ICountdownService>, ServiceStack.Countdown.TestClient.Services.ICountdownService {
        
        public CountdownServiceClient() {
        }
        
        public CountdownServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CountdownServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CountdownServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CountdownServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Version() {
            return base.Channel.Version();
        }
        
        public System.Threading.Tasks.Task<string> VersionAsync() {
            return base.Channel.VersionAsync();
        }
        
        public ServiceStack.Countdown.TestClient.Services.deviationMessageSet GetDeviationMessageSet() {
            return base.Channel.GetDeviationMessageSet();
        }
        
        public System.Threading.Tasks.Task<ServiceStack.Countdown.TestClient.Services.deviationMessageSet> GetDeviationMessageSetAsync() {
            return base.Channel.GetDeviationMessageSetAsync();
        }
        
        public ServiceStack.Countdown.TestClient.Services.departureTimeSet GetDepartureTimeSet() {
            return base.Channel.GetDepartureTimeSet();
        }
        
        public System.Threading.Tasks.Task<ServiceStack.Countdown.TestClient.Services.departureTimeSet> GetDepartureTimeSetAsync() {
            return base.Channel.GetDepartureTimeSetAsync();
        }
        
        public ServiceStack.Countdown.TestClient.Services.stopPointSet GetStopPointSet() {
            return base.Channel.GetStopPointSet();
        }
        
        public System.Threading.Tasks.Task<ServiceStack.Countdown.TestClient.Services.stopPointSet> GetStopPointSetAsync() {
            return base.Channel.GetStopPointSetAsync();
        }
        
        public bool PostStatusReportSet(ServiceStack.Countdown.TestClient.Services.statusReportSet ReportSet) {
            return base.Channel.PostStatusReportSet(ReportSet);
        }
        
        public System.Threading.Tasks.Task<bool> PostStatusReportSetAsync(ServiceStack.Countdown.TestClient.Services.statusReportSet ReportSet) {
            return base.Channel.PostStatusReportSetAsync(ReportSet);
        }
    }
}
